generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id          Int     @id @default(autoincrement())
  FirstName   String? @db.VarChar(50)
  LastName    String? @db.VarChar(50)
  Email       String? @unique @db.VarChar(100)
  NumberPhone Int?    @unique
  password    String? @db.Text
  role        String? @default("admin") @db.VarChar(50)
  photo       String? @db.Text
  address     String? @db.Text
  City        String? @db.Text
  Country     String? @db.Text
  status      String? @default("authorized") @db.VarChar(50)
}

model parkings {
  id          String  @id @db.VarChar(10)
  Name        String? @db.VarChar(50)
  city        String? @db.VarChar(100)
  NbPlace     Int?
  description String? @db.Text
  photo       String? @db.Text
  coordX      Float?  @db.Float
  coordY      Float?  @db.Float
  place       place[]
}

model place {
  id                                            String        @id @db.VarChar(10)
  state                                         String?       @default("free") @db.VarChar(50)
  id_parking                                    String?       @db.VarChar(10)
  id_reservation                                Int?
  parkings                                      parkings?     @relation(fields: [id_parking], references: [id])
  reservation_place_id_reservationToreservation reservation?  @relation("place_id_reservationToreservation", fields: [id_reservation], references: [id])
  reservation_placeToreservation_id_place       reservation[] @relation("placeToreservation_id_place")

  @@index([id_parking], name: "id_parking")
  @@index([id_reservation], name: "id_reservation")
}

model reservation {
  id                                      Int       @id @default(autoincrement())
  dateTime_start_reservation              DateTime? @default(now()) @db.DateTime(0)
  dateTime_end_reservation                DateTime? @default(now()) @db.DateTime(0)
  username                                String?   @db.VarChar(100)
  id_place                                String?   @db.VarChar(10)
  id_car                                  Int?
  car                                     car?      @relation(fields: [id_car], references: [id])
  place_placeToreservation_id_place       place?    @relation("placeToreservation_id_place", fields: [id_place], references: [id])
  users                                   users?    @relation(fields: [username], references: [username])
  place_place_id_reservationToreservation place[]   @relation("place_id_reservationToreservation")

  @@index([id_car], name: "id_car")
  @@index([id_place], name: "id_place")
  @@index([username], name: "username")
}

model users {
  id           Int           @id @default(autoincrement())
  FirstName    String?       @db.VarChar(50)
  LastName     String?       @db.VarChar(50)
  username     String?       @unique @db.VarChar(100)
  Email        String?       @unique @db.VarChar(100)
  NumberPhone  Int?          @unique
  password     String?       @db.Text
  NbPoints     Float?        @default(0) @db.Float
  address      String?       @db.Text
  typePack     String?       @db.VarChar(20)
  packStart    DateTime?     @db.Date
  packEnd      DateTime?     @db.Date
  cardNumber   String?       @unique @db.VarChar(16)
  cardEnd      DateTime?     @db.Date
  cvc          String?       @db.VarChar(3)
  stateAccount String?       @default("authorized") @db.VarChar(50)
  isConnected  Boolean?
  reservation  reservation[]
}

model car {
  id          Int           @id @default(autoincrement())
  matricule   String?       @unique @db.VarChar(20)
  reservation reservation[]
}
